import type { FromSchema } from 'json-schema-to-ts';
import * as schemas from './schemas';
export type ActivityStreamQueryMetadataParam = FromSchema<typeof schemas.ActivityStreamQuery.metadata>;
export type ActivityStreamQueryResponse200 = FromSchema<typeof schemas.ActivityStreamQuery.response['200']>;
export type CohortsListMetadataParam = FromSchema<typeof schemas.CohortsList.metadata>;
export type CohortsListResponse200 = FromSchema<typeof schemas.CohortsList.response['200']>;
export type EngageQueryFormDataParam = FromSchema<typeof schemas.EngageQuery.formData>;
export type EngageQueryMetadataParam = FromSchema<typeof schemas.EngageQuery.metadata>;
export type EngageQueryResponse200 = FromSchema<typeof schemas.EngageQuery.response['200']>;
export type FunnelsListSavedMetadataParam = FromSchema<typeof schemas.FunnelsListSaved.metadata>;
export type FunnelsListSavedResponse200 = FromSchema<typeof schemas.FunnelsListSaved.response['200']>;
export type FunnelsQueryMetadataParam = FromSchema<typeof schemas.FunnelsQuery.metadata>;
export type FunnelsQueryResponse200 = FromSchema<typeof schemas.FunnelsQuery.response['200']>;
export type InsightsQueryMetadataParam = FromSchema<typeof schemas.InsightsQuery.metadata>;
export type InsightsQueryResponse200 = FromSchema<typeof schemas.InsightsQuery.response['200']>;
export type ListRecentEventsMetadataParam = FromSchema<typeof schemas.ListRecentEvents.metadata>;
export type ListRecentEventsResponse200 = FromSchema<typeof schemas.ListRecentEvents.response['200']>;
export type QueryEventPropertiesMetadataParam = FromSchema<typeof schemas.QueryEventProperties.metadata>;
export type QueryEventPropertiesResponse200 = FromSchema<typeof schemas.QueryEventProperties.response['200']>;
export type QueryEventsTopPropertiesMetadataParam = FromSchema<typeof schemas.QueryEventsTopProperties.metadata>;
export type QueryEventsTopPropertiesResponse200 = FromSchema<typeof schemas.QueryEventsTopProperties.response['200']>;
export type QueryEventsTopPropertyValuesMetadataParam = FromSchema<typeof schemas.QueryEventsTopPropertyValues.metadata>;
export type QueryEventsTopPropertyValuesResponse200 = FromSchema<typeof schemas.QueryEventsTopPropertyValues.response['200']>;
export type QueryJqlFormDataParam = FromSchema<typeof schemas.QueryJql.formData>;
export type QueryJqlMetadataParam = FromSchema<typeof schemas.QueryJql.metadata>;
export type QueryJqlResponse200 = FromSchema<typeof schemas.QueryJql.response['200']>;
export type QueryMonthsTopEventNamesMetadataParam = FromSchema<typeof schemas.QueryMonthsTopEventNames.metadata>;
export type QueryMonthsTopEventNamesResponse200 = FromSchema<typeof schemas.QueryMonthsTopEventNames.response['200']>;
export type QueryTopEventsMetadataParam = FromSchema<typeof schemas.QueryTopEvents.metadata>;
export type QueryTopEventsResponse200 = FromSchema<typeof schemas.QueryTopEvents.response['200']>;
export type RetentionFrequencyQueryMetadataParam = FromSchema<typeof schemas.RetentionFrequencyQuery.metadata>;
export type RetentionFrequencyQueryResponse200 = FromSchema<typeof schemas.RetentionFrequencyQuery.response['200']>;
export type RetentionQueryMetadataParam = FromSchema<typeof schemas.RetentionQuery.metadata>;
export type RetentionQueryResponse200 = FromSchema<typeof schemas.RetentionQuery.response['200']>;
export type SegmentationNumericQueryMetadataParam = FromSchema<typeof schemas.SegmentationNumericQuery.metadata>;
export type SegmentationNumericQueryResponse200 = FromSchema<typeof schemas.SegmentationNumericQuery.response['200']>;
export type SegmentationQueryAverageMetadataParam = FromSchema<typeof schemas.SegmentationQueryAverage.metadata>;
export type SegmentationQueryAverageResponse200 = FromSchema<typeof schemas.SegmentationQueryAverage.response['200']>;
export type SegmentationQueryMetadataParam = FromSchema<typeof schemas.SegmentationQuery.metadata>;
export type SegmentationQueryResponse200 = FromSchema<typeof schemas.SegmentationQuery.response['200']>;
export type SegmentationSumQueryMetadataParam = FromSchema<typeof schemas.SegmentationSumQuery.metadata>;
export type SegmentationSumQueryResponse200 = FromSchema<typeof schemas.SegmentationSumQuery.response['200']>;
